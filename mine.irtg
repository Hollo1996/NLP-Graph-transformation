interpretation tree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation graph: de.up.ling.irtg.algebra.graph.GraphAlgebra

S! -> predicate(NP,VP)
[tree] 	S(?1,?2)
[graph] f_subj(f_vcomp(merge("(u<root> / root :root (w<vcomp>))", f_obj(merge(r_obj(?1), r_vcomp(r_subject_obj(?2)))))))
							 
NP -> lonlyNoun(NN)
[tree] NP(NN(?1))
[graph] f_subj(f_obj(?1))

NN -> john
[tree] john
[graph] "(n<root> / john)"

NN -> mary
[tree] mary
[graph] "(n<root> / mary)"

VP -> loves(NP)
[tree] VP(V(loves),?1)
[graph] f_obj(merge("(u<root> / loves  :dobj (v<object>)  :nsubj (w<subject>))", r_object(?1)))

/* input: S(NP(NN(john)),VP(V(loves),NP(NN(mary)))) */